# cargo-deny configuration
# See: https://github.com/EmbarkStudios/cargo-deny

########################################################################
# Advisory DB (RustSec) scanning
########################################################################
[advisories]
# Lint levels: deny / warn / allow
vulnerability = "deny"
unmaintained = "warn"
unsound = "deny"
yanked = "deny"
notice = "warn"

# Update the advisory DB automatically (CI may override via `--no-fetch`)
# Setting to true ensures freshness locally; CI can pin by caching the DB.
fetch = true

# Ignore specific advisories (example format)
# Uncomment and populate if you must temporarily allow an advisory.
# ignore = [
#   "RUSTSEC-2023-XXXX",
# ]

# Informational: Show severity in report
severity-threshold = "none" # options: none / low / medium / high / critical

########################################################################
# Crate / dependency configuration
########################################################################
[crates]
# Duplicates add bloat; choose strategy:
# - "deny" for strict single-version enforcement
# - "warn" to surface but not block PRs
# - "allow" to ignore
duplicate = "warn"

# Detect wildcard versions in workspace manifests
wildcard-version = "deny"

# Allow pre-release crates? Often undesirable for production.
allow-prerelease = false

########################################################################
# License configuration
########################################################################
[licenses]
# SPDX expressions allowed in dependency graph
allow = [
  "MIT",
  "Apache-2.0",
  "BSD-3-Clause",
  "BSD-2-Clause",
  "ISC",
  "Unicode-DFS-2016"
]

# Common permissive / dual-license combos
# e.g. crates often use "MIT OR Apache-2.0"
# cargo-deny internally expands these automatically.

# Deny copyleft or problematic licenses
deny = [
  "GPL-3.0",
  "AGPL-3.0",
  "LGPL-3.0",
  "MPL-2.0",
  "CDDL-1.0",
  "EUPL-1.2"
]

# Confidence threshold for license text detection (0.8 default)
confidence-threshold = 0.8

# Exceptions: allow a specific crate+version with a license not in `allow`
# Add only with justification comment.
exceptions = [
  # Example:
  # { name = "some-crate", version = "1.2.3", license = "MPL-2.0", justification = "Transitive dependency, replaces soon" }
]

########################################################################
# Source (registry and git) restrictions
########################################################################
[sources]
unknown-registry = "deny"
unknown-git = "deny"
allow-git = [
  # If you rely on git dependencies, whitelist them here.
  # { url = "https://github.com/owner/repo" },
]

# Allow only crates.io registry by default
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

########################################################################
# Bans: enforce disallow/allow lists for specific crates
########################################################################
[bans]
# Lint whether a specific crate appears anywhere
deny = [
  # Example: "openssl"   # if you want to avoid OpenSSL and enforce rustls
]

# Allow multiple versions for certain crates (e.g. proc-macro crates)
allow-multiple-versions = [
  "bitflags",
  "proc-macro2",
  "syn",
  "quote",
]

# Skip specific crates from duplicate version checks (rarely needed)
skip = [
  # Example: "windows-sys"
]

# Skip tree: apply skip recursively (use sparingly)
skip-tree = [
]

########################################################################
# Output / reporting
########################################################################
[output]
# "terminal", "json" for machine consumption, or both
format = "terminal"
# Set to true to include build scripts/license text hash mismatch info
include-license-text = false

########################################################################
# Metadata (optional)
########################################################################
[metadata]
# You can tag certain crates with metadata and reference them in rules.
# Example:
# useful = { crates = ["tokio", "reqwest"], note = "Core async stack" }

########################################################################
# Final Notes:
# - Integrate via CI: `cargo deny check --all-features --show-stats`
# - For ignored advisories, ALWAYS add justification.
# - Review periodically; update allowed licenses as needed.
