name: CI

on:
  # Âú® main ÂàÜÊîØ push ‰∏éÁâàÊú¨ tag ÂèäÊâãÂä®Ëß¶ÂèëÊó∂ËøêË°å
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main]
  workflow_dispatch:

# Ê∑ªÂä†ÂøÖË¶ÅÁöÑÊùÉÈôê‰ª•ÂàõÂª∫ GitHub Release
permissions:
  contents: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "22" # LTS ÁâàÊú¨ (v22.21.0)ÔºåÊîØÊåÅÂà∞ 2027Âπ¥4Êúà

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Rust ‰ª£Á†ÅË¥®ÈáèÊ£ÄÊü•
      - name: Rust Clippy
        run: cargo clippy --manifest-path src-tauri/Cargo.toml -- -D warnings

      - name: Rust format check
        run: cargo fmt --manifest-path src-tauri/Cargo.toml -- --check

      # ÂâçÁ´Ø‰ª£Á†ÅË¥®ÈáèÊ£ÄÊü•
      - name: Frontend Lint
        run: npm run lint

      - name: Frontend format check
        run: npm run format:check

      - name: TypeScript typecheck
        run: npm run typecheck

      - name: Frontend build
        run: npm run build

      - name: Rust tests
        run: cargo test --manifest-path src-tauri/Cargo.toml

      - name: Frontend tests
        run: pnpm run test:frontend

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          retention-days: 7

  bundle:
    name: Tauri Bundle (${{ matrix.platform }})
    needs: build
    # Âè™Âú®Êé®ÈÄÅ tag Êó∂ËøêË°å bundleÔºåËäÇÁúÅÊôÆÈÄö push ÁöÑÊûÑÂª∫Êó∂Èó¥
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "Ubuntu"
            os: ubuntu-latest
          - platform: "macOS (Intel)"
            os: macos-13
          - platform: "macOS (Apple Silicon)"
            os: macos-latest
          - platform: "Windows"
            os: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.6

      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo build (release)
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Extract changelog for current version
        id: changelog
        shell: bash
        run: |
          VERSION="${GITHUB_REF_NAME#v}"

          # Extract content between current version header and next version header
          CHANGELOG=$(awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '$d' | tail -n +2)

          # If changelog is empty, use a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="ËØ∑Êü•ÁúãÂÆåÊï¥ÁöÑÊõ¥Êñ∞Êó•Âøó: [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)"
          fi

          # Save to output (handle multiline)
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build Tauri app and create GitHub Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Bing Wallpaper Now v__VERSION__"
          releaseBody: |
            # üéâ Bing Wallpaper Now v__VERSION__

            > A cross-platform desktop application that automatically fetches and sets beautiful Bing daily wallpapers.

            ## üì¶ Installation

            ### Windows
            - **Êé®Ëçê**: [Bing.Wallpaper.Now_v__VERSION___x64_zh-CN.msi](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/Bing.Wallpaper.Now_v__VERSION___x64_zh-CN.msi) - Windows 10/11 (64-bit)
            - **Â§áÈÄâ**: [Bing.Wallpaper.Now_v__VERSION___x64-setup.exe](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/Bing.Wallpaper.Now_v__VERSION___x64-setup.exe) - NSIS ÂÆâË£ÖÁ®ãÂ∫è

            ### macOS
            - **Apple Silicon (M1/M2/M3)**: [Bing.Wallpaper.Now_v__VERSION___aarch64.dmg](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/Bing.Wallpaper.Now_v__VERSION___aarch64.dmg)
            - **Intel**: [Bing.Wallpaper.Now_v__VERSION___x64.dmg](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/Bing.Wallpaper.Now_v__VERSION___x64.dmg)
            - **Universal**: [Bing.Wallpaper.Now.app.tar.gz](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/Bing.Wallpaper.Now.app.tar.gz)

            **‚ö†Ô∏è macOS Security Notice**:

            This app is **not signed or notarized** by Apple (requires $99/year Apple Developer account). When you first open the app, macOS Gatekeeper will block it.

            **Solution (choose one):**

            1. **Command Line** (Recommended - Most Precise):
               ```bash
               xattr -rd com.apple.quarantine "/Applications/Bing Wallpaper Now.app"
               ```
               This removes only the quarantine attribute, preserving other metadata.

            2. **System Settings**: Open "Settings ‚Üí Privacy & Security", find the app and click "Open Anyway"

            3. **Right-click**: Control-click the app icon and select "Open"

            This is standard for open-source apps. See [macOS Installation Guide](https://github.com/qiyuey/bing-wallpaper-now/blob/main/docs/MACOS_INSTALL.md) for details.

            ### Linux
            - **Debian/Ubuntu**: [bing-wallpaper-now_v__VERSION___amd64.deb](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/bing-wallpaper-now_v__VERSION___amd64.deb)
            - **Universal**: [bing-wallpaper-now_v__VERSION___amd64.AppImage](https://github.com/${{ github.repository }}/releases/download/v__VERSION__/bing-wallpaper-now_v__VERSION___amd64.AppImage)

            ## ‚ú® What's New in v__VERSION__

            ${{ steps.changelog.outputs.content }}

            ---

            [Full Changelog](https://github.com/qiyuey/bing-wallpaper-now/blob/main/CHANGELOG.md)
          releaseDraft: false
          prerelease: false

      - name: Show sccache stats
        run: sccache --show-stats

      - name: Upload bundles
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundles-${{ matrix.platform }}
          path: src-tauri/target/release/bundle
          retention-days: 7
