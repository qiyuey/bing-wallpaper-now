name: CI

on:
  # 在 main 分支 push 与版本 tag 及手动触发时运行
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Test (basic)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Cargo (registry + git)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf
      - name: Install Node dependencies
        run: npm ci --prefer-offline --no-audit
      - name: TypeScript typecheck
        run: npm run typecheck
      - name: Frontend build
        run: npm run build
      - name: Rust tests
        run: bash -c "set -o pipefail; cargo test --manifest-path src-tauri/Cargo.toml -- --nocapture | tee test-rust.log"
      - name: Frontend tests
        run: bash -c "set -o pipefail; npm run test:frontend | tee test-frontend.log"
      - name: Upload dist artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            test-rust.log
            test-frontend.log

  bundle:
    name: Tauri Bundle (${{ matrix.os }})
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Cargo (registry + git)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install Node dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Generate release summary
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "## Release ${GITHUB_REF##*/}" > RELEASE_SUMMARY.md
          echo "" >> RELEASE_SUMMARY.md
          echo "Commit: $GITHUB_SHA" >> RELEASE_SUMMARY.md
          echo "Date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> RELEASE_SUMMARY.md
          echo "" >> RELEASE_SUMMARY.md
          echo "Platforms: ubuntu-latest, macos-latest, windows-latest" >> RELEASE_SUMMARY.md
          echo "Dist reused from build job artifact." >> RELEASE_SUMMARY.md

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: build

      - name: Upload bundles
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundles-${{ runner.os }}
          path: src-tauri/target/release/bundle

      - name: Upload release summary
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-summary
          path: RELEASE_SUMMARY.md
